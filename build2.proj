<Project DefaultTargets="Build">
  <Import Project="Version.props" />
  <Import Project="Settings.props" />
  <Import Project="Loc.Settings.targets" />

  <PropertyGroup>
    <CIBuild Condition="'$(CIBuild)' == ''">false</CIBuild>
    <EngineBuild Condition="'$(EngineBuild)' == '' AND '$(CIBuild)' == 'false'">true</EngineBuild>
    <TemplatesBuild Condition="'$(TemplatesBuild)' == '' AND '$(CIBuild)' == 'false'">true</TemplatesBuild>
    <SkipTests Condition="'$(SkipTests)' == ''">false</SkipTests>
    <PB_SkipTests Condition="'$(PB_SkipTests)' == ''">false</PB_SkipTests>
  </PropertyGroup>

  <PropertyGroup>
    <InnerRingProjects>
      src/Microsoft.TemplateEngine.Abstractions/Microsoft.TemplateEngine.Abstractions.csproj;
      src/Microsoft.TemplateEngine.Core.Contracts/Microsoft.TemplateEngine.Core.Contracts.csproj;
      src/Microsoft.TemplateEngine.Utils/Microsoft.TemplateEngine.Utils.csproj;
      src/Microsoft.TemplateEngine.Core/Microsoft.TemplateEngine.Core.csproj;
      src/Microsoft.TemplateEngine.Orchestrator.RunnableProjects/Microsoft.TemplateEngine.Orchestrator.RunnableProjects.csproj
    </InnerRingProjects>

    <OuterRingProjects>
      src/Microsoft.TemplateEngine.Edge/Microsoft.TemplateEngine.Edge.csproj;
      src/Microsoft.TemplateEngine.IDE/Microsoft.TemplateEngine.IDE.csproj;
      test/Microsoft.TemplateEngine.Mocks/Microsoft.TemplateEngine.Mocks.csproj
    </OuterRingProjects>

    <SharedTestProjects>
      test/Microsoft.TemplateEngine.TestHelper/Microsoft.TemplateEngine.TestHelper.csproj
    </SharedTestProjects>

    <CliProjects>
      src/Microsoft.TemplateEngine.Cli/Microsoft.TemplateEngine.Cli.csproj;
    </CliProjects>

    <LocProjects>
      src/Microsoft.TemplateEngine.Cli.Localization/Microsoft.TemplateEngine.Cli.Localization.csproj;
    </LocProjects>

    <Executables>
      src/dotnet-new3/dotnet-new3.csproj
    </Executables>

    <TestUtilities>test/Microsoft.TemplateEngine.EndToEndTestHarness/Microsoft.TemplateEngine.EndToEndTestHarness.csproj</TestUtilities>

    <TestProjects>
      test/Microsoft.TemplateEngine.Core.UnitTests/Microsoft.TemplateEngine.Core.UnitTests.csproj;
      test/Microsoft.TemplateEngine.Orchestrator.RunnableProjects.UnitTests/Microsoft.TemplateEngine.Orchestrator.RunnableProjects.UnitTests.csproj;
      test/Microsoft.TemplateEngine.Utils.UnitTests/Microsoft.TemplateEngine.Utils.UnitTests.csproj;
      test/Microsoft.TemplateEngine.Cli.UnitTests/Microsoft.TemplateEngine.Cli.UnitTests.csproj;
      test/Microsoft.TemplateEngine.Edge.UnitTests/Microsoft.TemplateEngine.Edge.UnitTests.csproj;
      test/dotnet-new3.UnitTests/dotnet-new3.UnitTests.csproj;
      test/Microsoft.TemplateEngine.TestHelper/Microsoft.TemplateEngine.TestHelper.csproj
    </TestProjects>

    <ProjectsToAlwaysRestore>
      src/Microsoft.TemplateEngine.Abstractions/Microsoft.TemplateEngine.Abstractions.csproj;
      src/Microsoft.TemplateEngine.Core.Contracts/Microsoft.TemplateEngine.Core.Contracts.csproj;
      src/Microsoft.TemplateEngine.Utils/Microsoft.TemplateEngine.Utils.csproj;
      src/Microsoft.TemplateEngine.Core/Microsoft.TemplateEngine.Core.csproj;
      src/Microsoft.TemplateEngine.Orchestrator.RunnableProjects/Microsoft.TemplateEngine.Orchestrator.RunnableProjects.csproj;
      src/Microsoft.TemplateEngine.Edge/Microsoft.TemplateEngine.Edge.csproj;
      src/Microsoft.TemplateEngine.IDE/Microsoft.TemplateEngine.IDE.csproj;
      test/Microsoft.TemplateEngine.Mocks/Microsoft.TemplateEngine.Mocks.csproj;
      src/Microsoft.TemplateEngine.Cli/Microsoft.TemplateEngine.Cli.csproj;
      src/dotnet-new3/dotnet-new3.csproj
    </ProjectsToAlwaysRestore>
  </PropertyGroup>

  <Target Name="Configure">
    <MakeDir Directories="$(ArtifactsDir);$(PackageOutputPath);$(TemplatesOutputPath);$(DevPath)" />
    <CallTarget Targets="CollectGitInfo" />
  </Target>

  <Target Name="DoRestore" DependsOnTargets="Configure">
    <Message Text="Restoring..." Importance="High" />

    <MSBuild Projects="$(ProjectsToAlwaysRestore)" Targets="Restore"
             Properties="Configuration=$(Configuration);RestoreRecursive=false"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="$(TestProjects);$(TestUtilities)" Targets="Restore"
             Condition="'$(PB_SkipTests)' == 'false'"
             Properties="Configuration=$(Configuration);RestoreRecursive=false"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>

  <Target Name="Build" DependsOnTargets="DoRestore">
    <Message Text="Building..." Importance="High" />

    <MSBuild Projects="$(ProjectsToAlwaysRestore)" Targets="Build"
             Properties="Configuration=$(Configuration);RestoreRecursive=false"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="$(TestProjects);$(TestUtilities)" Targets="Build"
             Condition="'$(PB_SkipTests)' == 'false'"
             Properties="Configuration=$(Configuration);RestoreRecursive=false"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <!-- Build templates -->
    <MSBuild Projects="template_feed/Template.proj" Targets="Build"
             Condition="'$(TemplatesBuild)' == 'true'"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>

  <Target Name="Sign" DependsOnTargets="Build">
    <Message Text="Signing..." Importance="High" />

    <MSBuild Condition="'$(PB_SignType)' == 'real' or '$(PB_SignType)' == 'test'"
             Projects="build\Sign.csproj"
             Targets="Restore"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Condition="'$(PB_SignType)' == 'real' or '$(PB_SignType)' == 'test'"
             Projects="sign.proj"
             Targets="PostCompileSign"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>

  <Target Name="Pack" DependsOnTargets="Sign">
    <Message Text="Packing..." Importance="High" />

    <MSBuild Projects="$(InnerRingProjects)" Targets="Pack"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Projects="$(OuterRingProjects)" Targets="Pack"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />       

    <MSBuild Projects="$(CliProjects)" Targets="Pack"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Projects="$(SharedTestProjects)" Targets="Pack"
             Condition="'$(EngineBuild)' == 'true' AND '$(PB_SkipTests)' == 'false'"
             Properties="Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="$(Executables)" Targets="Publish"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="Configuration=$(Configuration);PublishDir=$(DevPath);RestoreRecursive=false;NoBuild=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>

  <Target Name="Test" DependsOnTargets="Pack" Condition="'$(PB_SkipTests)' != 'true'">
    <MSBuild Projects="$(TestProjects)" Targets="VSTest"
             Condition="'$(EngineBuild)' == 'true' AND '$(SkipTests)' != 'true'"
             Properties="Configuration=$(Configuration);VSTestLogger=trx;NoBuild=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>
    
  <!-- Localization -->
  <Target Name="BuildLocalized" DependsOnTargets="SetLanguages" Condition="Exists('.tools\loc\loc.proj')">
    <MSBuild Projects=".tools\loc\loc.proj" Targets="Build"
             Properties="Lang=%(Languages.Identity)" />

    <!-- Strong name the localized assemblies-->
    <MSBuild Projects="sign.proj"
             Targets="SNSignLocResources"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Condition="'$(PB_SignType)' == 'real' or '$(PB_SignType)' == 'test'"
             Projects="sign.proj"
             Targets="PostCompileLocSign"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Projects="$(LocProjects)" Targets="Restore;Build;Pack"
             Properties="Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

  </Target>

  <Target Name="SetLanguages">
    <ItemGroup>
      <Languages Remove="@(Languages)" />
    </ItemGroup>

    <ItemGroup>
      <Languages Include="$(AllLanguages)" Condition="'$(Lang)' == 'all'" />
      <Languages Include="$(Lang)" Condition="'$(Lang)' != 'all'" />
      <Languages Include="ploc" Condition="'$(Lang)' == ''" />
    </ItemGroup>
  </Target>

</Project>